
# Build sglua - a slua with its extension libraries statically linked,
# dynamically linked with glibc. sglua supports dynamic loading
# of other libraries as .so files.
#
#
# 
# note: to build with glibc or uClibc, must add " -lpthread -lm -ldl " at 
# the end of the link lines for slua and sluac.
#
# ----------------------------------------------------------------------

CC= gcc
AR= ar

# note: don't use  -DSLUA_DYNLINK to link statically the extension libs
CFLAGS= -Os -Isrc/lua/ -DLUA_USE_POSIX -DLUA_USE_STRTODHEX \
         -DLUA_USE_AFORMAT -DLUA_USE_LONGLONG  \
		 -DLUA_USE_DLOPEN
LDFLAGS= 


# list of additional libraries 
# (lua, linenoise and slua are not included here)
SLUALIBS= lfs.a luazen.a minisock.a


SLUA_O=      slua.o linit.o 
LUA_O=       \
	lapi.o lcode.o ldebug.o lgc.o lmem.o loslib.o lstrlib.o lundump.o  \
	lauxlib.o lcorolib.o ldo.o liolib.o loadlib.o lparser.o ltable.o   \
	lutf8lib.o lbaselib.o lctype.o ldump.o llex.o lobject.o lstate.o   \
	ltablib.o lvm.o lbitlib.o ldblib.o lfunc.o lmathlib.o lopcodes.o   \
	lstring.o ltm.o lzio.o
LINENOISE_O= linenoise.o 
LFS_O=       lfs.o
LUAZEN_O=    \
	base58.o base64.o blake2b.o blz.o chacha.o gimli.o luazen.o \
	lzf.o md5.o norx.o random.o rc4.o x25519.o xor.o 

MINISOCK_O=      minisock.o

smoketest:  sglua
	./sglua  test/smoketest_g.lua

sglua:  slua.a lua.a linenoise.a $(SLUALIBS)
	$(CC)  -o sglua $(LDFLAGS) slua.a linenoise.a $(SLUALIBS) lua.a \
	   -Wl,-E -lpthread -lm -ldl
	strip sglua

slua.a:  lua.a linenoise.a src/slua.c src/linit.c 
	$(CC) -c $(CFLAGS) -Isrc/linenoise/ src/*.c
	$(AR) rcu slua.a $(SLUA_O)
	rm -f *.o

lua.a:  src/lua/*.c src/lua/*.h
	$(CC) -c $(CFLAGS) src/lua/*.c
	$(AR) rcu lua.a $(LUA_O)
	rm -f *.o

linenoise.a:  lua.a src/linenoise/*.c src/linenoise/*.h
	$(CC) -c $(CFLAGS) src/linenoise/*.c
	$(AR) rcu linenoise.a $(LINENOISE_O)
	rm -f *.o

lfs.a:  lua.a src/lfs/*.c src/lfs/*.h
	$(CC) -c $(CFLAGS) src/lfs/*.c
	$(AR) rcu lfs.a $(LFS_O)
	rm -f *.o

luazen.a:  lua.a src/luazen/*.c src/luazen/*.h
	$(CC) -c $(CFLAGS) src/luazen/*.c
	$(AR) rcu luazen.a $(LUAZEN_O)
	rm -f *.o

minisock.a:  lua.a src/minisock/*.c
	$(CC) -c $(CFLAGS) src/minisock/*.c
	$(AR) rcu minisock.a $(MINISOCK_O)
	rm -f *.o

clean:
	rm -f slua sluac sglua *.o *.a *.so

test: sglua
	./sglua test/test_luazen.lua
	
.PHONY: clean setbin smoketest test

