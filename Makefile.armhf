
#
# Build a completely static 'slua' on Linux with the Musl C library 
# for target $ARCH (see below)
#
# This uses a cross-compilation environment 
# built with 'musl-cross-make' by Rich Felker.
# See https://github.com/richfelker/musl-cross-make
#
# The resulting slua is tested (smoketest.lua) 
# on the x86_64 build platform with qemu-arm 
# (qemu arm emulator in user mode)
#
# ----------------------------------------------------------------------

LUA= lua-5.3.5

ARCH=armhf

SLUAEXE=slua-$(ARCH)
SLUACEXE=sluac-$(ARCH)

CROSS= /opt/cross/bin/arm-linux-musleabihf

CC= $(CROSS)-gcc
AR= $(CROSS)-ar
LD= $(CROSS)-ld
STRIP= $(CROSS)-strip

CFLAGS= -Os -Isrc/$(LUA)/ \
	-DLUA_USE_POSIX -DLUA_USE_STRTODHEX \
        -DLUA_USE_AFORMAT -DLUA_USE_LONGLONG
	
LDFLAGS= 

# ----------------------------------------------------------------------
# luazen modular build: 
# the following constants can be defined to include
# the corresponding functions in the luazen library:
#
#   BASE64     Base64 encode/decode
#   BASE58     Base58 encode/decode
#   BLZ        BriefLZ compress/uncompress
#   LZF        LZF compress/uncompress
#   LZMA       LZMA compress/uncompress
#   NORX       Norx AEAD encrypt/decrypt
#   CHACHA     Xchacha20 AEAD encrypt/decrypt
#   RC4        RC4 encrypt/decrypt
#   MD5        MD5 hash
#   BLAKE      Blake2b hash, Argon2i key derivation
#   SHA2       SHA2-512 hash
#   X25519     Ec25519 key exchange and ed25519 signature functions
#   MORUS      Morus AEAD encrypt/decrypt
#   ASCON      Ascon128a AEAD encrypt/decrypt
#
# the list of functions for the default build:

LZFUNCS= -DBASE64 -DLZMA -DBLAKE -DX25519 -DMORUS
       
# not included by default: 
#	-DBASE58 -DBLZ -DLZF 
#	-DNORX -DCHACHA -DRC4 -DMD5 -DSHA2 -DASCON 
#       
# ----------------------------------------------------------------------

smoketest:  slua
	qemu-arm  ./slua  test/smoketest.lua

slua:  src/$(LUA)/*.c src/$(LUA)/*.h  src/luazen/*.c src/*.c src/*.h
	#~ $(CC) -c $(CFLAGS) src/$(LUA)/*.c
	$(CC) -c $(CFLAGS) -DMAKE_LIB  src/*.c
	$(CC) -c $(CFLAGS) $(LZFUNCS) src/luazen/*.c
	$(AR) rcu slua.a *.o
	$(CC) -static -o slua $(LDFLAGS) slua.o slua.a
	$(STRIP) slua
	rm -f *.o

sluac:
	$(CC) -static -o sluac -DMAKE_LUAC $(CFLAGS) $(LDFLAGS) src/one.c
	$(STRIP) sluac

clean:
	rm -f slua sluac sglua *.o *.a *.so

test:  slua
	./slua test/test_luazen.lua
	
.PHONY: clean setbin smoketest test allbin

