# Makefile.i586
#
# Build a completely static 'slua' on Linux with the Musl C library 
# for the intel i586 architecture (ELF 32-bit)
#
# This uses a cross-compilation environment based on gcc-5.3.0
# built with 'musl-cross-make' by Rich Felker.
# See https://github.com/richfelker/musl-cross-make
#
# The resulting slua is tested (smoketest.lua) 
# on the x86_64 build platform
#
# ----------------------------------------------------------------------

SLUAEXE=slua-i586
SLUACEXE=sluac-i586

CROSS= /opt/cross-i586/bin/i586-linux-musl

CC= $(CROSS)-gcc
AR= $(CROSS)-ar
LD= $(CROSS)-ld
STRIP= $(CROSS)-strip

CFLAGS= -Os -Isrc/lua/ \
		-DLUA_USE_POSIX -DLUA_USE_STRTODHEX \
        -DLUA_USE_AFORMAT -DLUA_USE_LONGLONG \
##	-DNOARGON -DNOLEGACY
	
LDFLAGS= 

# list of additional libraries 
# (lua, linenoise and slua are not included here)
SLUALIBS= lfs.a luazen.a minisock.a 

SLUA_O=      slua.o linit.o 
LUA_O=       \
	lapi.o lcode.o ldebug.o lgc.o lmem.o loslib.o lstrlib.o lundump.o  \
	lauxlib.o lcorolib.o ldo.o liolib.o loadlib.o lparser.o ltable.o   \
	lutf8lib.o lbaselib.o lctype.o ldump.o llex.o lobject.o lstate.o   \
	ltablib.o lvm.o lbitlib.o ldblib.o lfunc.o lmathlib.o lopcodes.o   \
	lstring.o ltm.o lzio.o
LINENOISE_O= linenoise.o 
LFS_O=       lfs.o
LUAZEN_O=    \
	base58.o base64.o blake2b.o blz.o chacha.o luazen.o \
	lzf.o md5.o morus.o norx.o random.o rc4.o x25519.o xor.o 
			 
MINISOCK_O=  minisock.o

smoketest:  slua
	./$(SLUAEXE) test/smoketest.lua

slua:  slua.a lua.a linenoise.a $(SLUALIBS)
	$(CC) -static -o $(SLUAEXE) $(LDFLAGS) slua.a linenoise.a $(SLUALIBS) lua.a
	$(STRIP) $(SLUAEXE)

slua.a:  lua.a linenoise.a src/slua.c src/linit.c  
	$(CC) -c $(CFLAGS) -Isrc/linenoise/ src/*.c
	$(AR) rc slua.a $(SLUA_O)
	rm -f *.o

lua.a:  src/lua/*.c src/lua/*.h
	$(CC) -c $(CFLAGS) src/lua/*.c
	$(AR) rc lua.a $(LUA_O)
	# build also the lua compiler before removing the .o files
	$(CC) -static -o $(SLUACEXE) luac.o lua.a
	$(STRIP) $(SLUACEXE)
	
	rm -f *.o

linenoise.a:  lua.a src/linenoise/*.c src/linenoise/*.h
	$(CC) -c $(CFLAGS) src/linenoise/*.c
	$(AR) rc linenoise.a $(LINENOISE_O)
	rm -f *.o

lfs.a:  lua.a src/lfs/*.c src/lfs/*.h
	$(CC) -c $(CFLAGS) src/lfs/*.c
	$(AR) rc lfs.a $(LFS_O)
	rm -f *.o

luazen.a:  lua.a src/luazen/*.c src/luazen/*.h
	$(CC) -c $(CFLAGS) src/luazen/*.c
	$(AR) rc luazen.a $(LUAZEN_O)
	rm -f *.o

minisock.a:  lua.a src/minisock/*.c
	$(CC) -c $(CFLAGS) src/minisock/*.c
	$(AR) rc minisock.a $(MINISOCK_O)
	rm -f *.o

clean:
	rm -f $(SLUAEXE) $(SLUACEXE) sglua *.o *.a *.so

setbin:
	md5sum slua >bin/slua.md5	
	cp slua bin/
	
test:  $(SLUAEXE)
	./$(SLUAEXE) test/test_luazen.lua
	
.PHONY: clean setbin smoketest test

